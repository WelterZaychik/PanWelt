<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="asia.welter.mapper.FileInfoMapper">

    <resultMap id="BaseResultMap" type="asia.welter.entity.po.FileInfo">
            <id property="fileId" column="file_id" jdbcType="VARCHAR"/>
            <id property="userId" column="user_id" jdbcType="VARCHAR"/>
            <result property="fileMd5" column="file_md5" jdbcType="VARCHAR"/>
            <result property="filePid" column="file_pid" jdbcType="VARCHAR"/>
            <result property="fileSize" column="file_size" jdbcType="BIGINT"/>
            <result property="fileName" column="file_name" jdbcType="VARCHAR"/>
            <result property="fileCover" column="file_cover" jdbcType="VARCHAR"/>
            <result property="filePath" column="file_path" jdbcType="VARCHAR"/>
            <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
            <result property="lastUpdateTime" column="last_update_time" jdbcType="TIMESTAMP"/>
            <result property="folderType" column="folder_type" jdbcType="TINYINT"/>
            <result property="fileCategory" column="file_category" jdbcType="TINYINT"/>
            <result property="fileType" column="file_type" jdbcType="TINYINT"/>
            <result property="status" column="status" jdbcType="TINYINT"/>
            <result property="recoveryTime" column="recovery_time" jdbcType="TIMESTAMP"/>
            <result property="delFlag" column="del_flag" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        file_id,user_id,file_md5,
        file_pid,file_size,file_name,
        file_cover,file_path,create_time,
        last_update_time,folder_type,file_category,
        file_type,status,recovery_time,
        del_flag
    </sql>

    <update id="updateFileStatusWithOldStatus">
        update file_info
        <set>
            <if test="updateInfo.fileMd5 != null">
                file_md5 = #{updateInfo.fileMd5},
            </if>
            <if test="updateInfo.filePid != null">
                file_pid = #{updateInfo.filePid},
            </if>
            <if test="updateInfo.fileSize != null">
                file_size = #{updateInfo.fileSize},
            </if>
            <if test="updateInfo.fileName != null">
                file_name = #{updateInfo.fileName},
            </if>
            <if test="updateInfo.fileCover != null">
                file_cover = #{updateInfo.fileCover},
            </if>
            <if test="updateInfo.filePath != null">
                file_path = #{updateInfo.filePath},
            </if>
            <if test="updateInfo.createTime != null">
                create_time = #{updateInfo.createTime},
            </if>
            <if test="updateInfo.lastUpdateTime != null">
                last_update_time = #{updateInfo.lastUpdateTime},
            </if>
            <if test="updateInfo.folderType != null">
                folder_type = #{updateInfo.folderType},
            </if>
            <if test="updateInfo.fileCategory != null">
                file_category = #{updateInfo.fileCategory},
            </if>
            <if test="updateInfo.fileType != null">
                file_type = #{updateInfo.fileType},
            </if>
            <if test="updateInfo.status != null">
                status = #{updateInfo.status},
            </if>
            <if test="updateInfo.recoveryTime != null">
                recovery_time = #{updateInfo.recoveryTime},
            </if>
            <if test="updateInfo.delFlag != null">
                del_flag = #{updateInfo.delFlag},
            </if>
        </set>
        where file_id = #{fileId}
        and user_id = #{userId}
        and status = #{status}
    </update>



    <select id="selectByFileIdAndUserId" resultType="asia.welter.entity.po.FileInfo">
        select
        <include refid="Base_Column_List"/>
        from file_info where file_id=#{fileId} and user_id=#{userId}
    </select>
</mapper>
